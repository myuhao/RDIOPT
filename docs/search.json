[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 RDIOPT authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuhao Min. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Min Y (2022). RDIOPT: Query Ortholog using DIOPT service. R package version 0.2.0.","code":"@Manual{,   title = {RDIOPT: Query Ortholog using DIOPT service},   author = {Yuhao Min},   year = {2022},   note = {R package version 0.2.0}, }"},{"path":"/index.html","id":"rdiopt","dir":"","previous_headings":"","what":"Query Ortholog using DIOPT service","title":"Query Ortholog using DIOPT service","text":"RDIOPT simple wrapper around DIOPT Ortholog Finder. intention package allow querying orthologs R directly, without copy paste. RDIOPT relies DIOPT API query search results.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Query Ortholog using DIOPT service","text":"can install development version RDIOPT GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"myuhao/RDIOPT\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Query Ortholog using DIOPT service","text":"Call find_orthologs() gene interests. function give nice tibble relevant information. result table many relevant information, can summarized three categories: Function parameters. Source gene information. Target gene information.","code":"# Entrez ID always work gene_of_interests = c(1232, 7316) # if you have AnnotationDbi installed, the function converts it for you if (require(org.Hs.eg.db)) {   gene_of_interests = c(\"CCR3\", \"UBC\") } orthologs = RDIOPT::find_orthologs(gene_of_interests, from = 9606, to = 7227, filter = \"none\") colnames(orthologs) #>  [1] \"date\"                         \"search_gene_entrez\"           #>  [3] \"filter\"                       \"from_entrez_geneid\"           #>  [5] \"symbol\"                       \"description\"                  #>  [7] \"chromosome\"                   \"gene_type\"                    #>  [9] \"ensembl_geneid\"               \"diopt_version\"                #> [11] \"from_id\"                      \"to_id\"                        #> [13] \"to_symbol\"                    \"confidence\"                   #> [15] \"score\"                        \"best_score\"                   #> [17] \"max_score\"                    \"best_score_rev\"               #> [19] \"best_score_count\"             \"mist_ppi\"                     #> [21] \"mist_genetic\"                 \"to_entrez_geneid\"             #> [23] \"species_id\"                   \"species_specific_geneid\"      #> [25] \"species_specific_geneid_type\" \"count\"                        #> [27] \"methods\""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Query Ortholog using DIOPT service","text":"DIOPT API","code":""},{"path":"/reference/check_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if all elements in the vecter is allowed. — check_arg","title":"Check if all elements in the vecter is allowed. — check_arg","text":"Check elements vecter allowed.","code":""},{"path":"/reference/check_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if all elements in the vecter is allowed. — check_arg","text":"","code":"check_arg(vec, allowed)"},{"path":"/reference/check_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if all elements in the vecter is allowed. — check_arg","text":"vector checking.","code":""},{"path":"/reference/covert_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert symbols to entrezID — convert_to_entrezID","title":"Convert symbols to entrezID — convert_to_entrezID","text":"Convert symbols entrezID","code":""},{"path":"/reference/covert_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert symbols to entrezID — convert_to_entrezID","text":"","code":"convert_to_entrezID(symbols)"},{"path":"/reference/covert_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert symbols to entrezID — convert_to_entrezID","text":"symbols Gene Symbols","code":""},{"path":"/reference/covert_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert symbols to entrezID — convert_to_entrezID","text":"vector mapped entrez ID","code":""},{"path":"/reference/covert_symbol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert symbols to entrezID — convert_to_entrezID","text":"function return vector length input. input mtach, return NA instead","code":""},{"path":[]},{"path":"/reference/find_orthologs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find orthologs between species — find_orthologs","title":"Find orthologs between species — find_orthologs","text":"Convert entrez gene ID one species another using DIOPT service. function wrapper DIOPT API.","code":""},{"path":"/reference/find_orthologs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find orthologs between species — find_orthologs","text":"","code":"find_orthologs(genes, from = 9606, to = 7227, filter = \"none\", version = 8)"},{"path":"/reference/find_orthologs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find orthologs between species — find_orthologs","text":"genes chr vector genes. See @details Source species. See @details Target species. See @details filter Filter results. See @details. version version used. Currently v9 still beta.","code":""},{"path":"/reference/find_orthologs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find orthologs between species — find_orthologs","text":"tibble requested information.","code":""},{"path":"/reference/find_orthologs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find orthologs between species — find_orthologs","text":"genes argument can either enterzID, used . can gene symbol, converted entrezID using org.Hs.eg.db::org.Hs.eg.db database. arguments NCBI Taxonomy ID. DIOPT currently supports following IDs: \"\":  Species (Avaiable Target ) \"4896\": Schizosaccharomyces pombe (Fission yeast) \"4932\": Saccharomyces cerevisiae (Yeast) \"6239\": Caenorhabditis elegans (Worm) \"7227\": Drosophila melanogaster (Fly) \"7955\": Danio rerio (Zebrafish) \"8364\": Xenopus tropicalis (Western clawed frog) \"9606\": Homo sapiens (Human) \"10090\": Mus musculus (Mouse) \"10116\": Rattus norvegicus (Rat) \"3702\": Arabidopsis thaliana (Thale cress) /length input genes 1, warning recycle match length gene. filter argument filter based score. Options : none/best_match/exclude_score_less_1/exclude_score_less_2. See API Documentation function vectorized, DIOPT API vectorized.","code":""},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/is_entrezID.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an input is enterzID — is_entrezID","title":"Check if an input is enterzID — is_entrezID","text":"Check input enterzID","code":""},{"path":"/reference/is_entrezID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an input is enterzID — is_entrezID","text":"","code":"is_entrezID(input, silent = TRUE)"},{"path":"/reference/is_entrezID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an input is enterzID — is_entrezID","text":"input vector gene symbol, name","code":""},{"path":"/reference/is_entrezID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an input is enterzID — is_entrezID","text":"input already enterzID","code":""},{"path":"/reference/parse_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to parse the response. — parse_response","title":"Function to parse the response. — parse_response","text":"Function parse response.","code":""},{"path":"/reference/parse_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to parse the response. — parse_response","text":"","code":"parse_response(raw_res)"},{"path":"/reference/parse_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to parse the response. — parse_response","text":"raw_res content httr response","code":""},{"path":"/reference/parse_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to parse the results that has ortholog — parse_results","title":"Helper function to parse the results that has ortholog — parse_results","text":"Helper function parse results ortholog","code":""},{"path":"/reference/parse_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to parse the results that has ortholog — parse_results","text":"","code":"parse_results(raw_res)"},{"path":"/reference/parse_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to parse the results that has ortholog — parse_results","text":"raw_res content httr response","code":""},{"path":"/reference/parse_search_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to parse the query — parse_search_detail","title":"Helper function to parse the query — parse_search_detail","text":"Helper function parse query","code":""},{"path":"/reference/parse_search_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to parse the query — parse_search_detail","text":"","code":"parse_search_detail(raw_res)"},{"path":"/reference/parse_search_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to parse the query — parse_search_detail","text":"raw_res content httr response","code":""},{"path":"/reference/results_NA_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to parse the results when failed to convert to entrezID — results_NA_id","title":"Helper function to parse the results when failed to convert to entrezID — results_NA_id","text":"Helper function parse results failed convert entrezID","code":""},{"path":"/reference/results_NA_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to parse the results when failed to convert to entrezID — results_NA_id","text":"","code":"results_NA_id()"},{"path":"/reference/results_no_ortholog.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to parse the results that has no ortholog — results_no_ortholog","title":"Helper function to parse the results that has no ortholog — results_no_ortholog","text":"Helper function parse results ortholog","code":""},{"path":"/reference/results_no_ortholog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to parse the results that has no ortholog — results_no_ortholog","text":"","code":"results_no_ortholog()"},{"path":"/reference/submit_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to submit a query to DIOPT — submit_ids","title":"Function to submit a query to DIOPT — submit_ids","text":"Function submit query DIOPT","code":""},{"path":"/reference/submit_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to submit a query to DIOPT — submit_ids","text":"","code":"submit_ids(id, from = 9606, to = 7227, filter = \"none\", version = 8)"},{"path":"/reference/submit_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to submit a query to DIOPT — submit_ids","text":"id single entrez gene id Source species. Target species. filter Filter results, see API API. version version used. Currently v9 still beta.","code":""}]
