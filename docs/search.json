[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 RDIOPT authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuhao Min. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Min Y (2022). RDIOPT: Query Ortholog using DIOPT service. R package version 0.1.0.","code":"@Manual{,   title = {RDIOPT: Query Ortholog using DIOPT service},   author = {Yuhao Min},   year = {2022},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"rdiopt","dir":"","previous_headings":"","what":"Query Ortholog using DIOPT service","title":"Query Ortholog using DIOPT service","text":"RDIOPT simple wrapper around DIOPT Ortholog Finder. intention package allow querying orthologs R directly, without copy paste. RDIOPT relies DIOPT API query search results.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Query Ortholog using DIOPT service","text":"can install development version RDIOPT GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"myuhao/RDIOPT\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Query Ortholog using DIOPT service","text":"Call find_orthologs() gene interests. function give nice tibble relevant information. Note Note currently DIOPT API supports Entrez ID. need convert genes accordingly. result table many relevant information, can summarized three categories: Function parameters. Source gene information. Target gene information.","code":"library(RDIOPT)  gene_of_interests = c(1232, 7316) orthologs = find_orthologs(gene_of_interests, from = 9606, to = 7227, filter = \"none\") colnames(orthologs) #>  [1] \"date\"                         \"search_gene_entrez\"           #>  [3] \"filter\"                       \"from_entrez_geneid\"           #>  [5] \"symbol\"                       \"description\"                  #>  [7] \"chromosome\"                   \"gene_type\"                    #>  [9] \"ensembl_geneid\"               \"diopt_version\"                #> [11] \"to_id\"                        \"to_symbol\"                    #> [13] \"from_id\"                      \"confidence\"                   #> [15] \"score\"                        \"best_score\"                   #> [17] \"max_score\"                    \"best_score_rev\"               #> [19] \"best_score_count\"             \"mist_ppi\"                     #> [21] \"mist_genetic\"                 \"to_entrez_geneid\"             #> [23] \"species_id\"                   \"species_specific_geneid\"      #> [25] \"species_specific_geneid_type\" \"count\"                        #> [27] \"methods\""},{"path":"/index.html","id":"function-parameters","dir":"","previous_headings":"Example","what":"Function parameters","title":"Query Ortholog using DIOPT service","text":"DIOPT recorded following parameter used query:","code":"#> # A tibble: 7 × 4 #>   date              search_gene_entrez filter diopt_version #>   <chr>                          <int> <chr>          <int> #> 1 22-10-20 22:17:56               1232 none               8 #> 2 22-10-20 22:17:56               7316 none               8 #> 3 22-10-20 22:17:56               7316 none               8 #> 4 22-10-20 22:17:56               7316 none               8 #> 5 22-10-20 22:17:56               7316 none               8 #> 6 22-10-20 22:17:56               7316 none               8 #> 7 22-10-20 22:17:56               7316 none               8"},{"path":"/index.html","id":"source-gene-information","dir":"","previous_headings":"Example","what":"Source gene information","title":"Query Ortholog using DIOPT service","text":"DIOPT try find information gene submitted.","code":"#> # A tibble: 7 × 6 #>   from_entrez_geneid symbol description                  chrom…¹ gene_…² ensem…³ #>                <int> <chr>  <chr>                          <int> <chr>   <chr>   #> 1               1232 CCR3   C-C motif chemokine recepto…       3 protei… ENSG00… #> 2               7316 UBC    ubiquitin C                       12 protei… ENSG00… #> 3               7316 UBC    ubiquitin C                       12 protei… ENSG00… #> 4               7316 UBC    ubiquitin C                       12 protei… ENSG00… #> 5               7316 UBC    ubiquitin C                       12 protei… ENSG00… #> 6               7316 UBC    ubiquitin C                       12 protei… ENSG00… #> 7               7316 UBC    ubiquitin C                       12 protei… ENSG00… #> # … with abbreviated variable names ¹​chromosome, ²​gene_type, ³​ensembl_geneid"},{"path":"/index.html","id":"source-gene-information-1","dir":"","previous_headings":"Example","what":"Source gene information","title":"Query Ortholog using DIOPT service","text":"actual ortholog information. Fileds left NA case orthologs can found.","code":"#> # A tibble: 7 × 17 #>   to_id  to_symbol from_id confi…¹ score best_…² max_s…³ best_…⁴ best_…⁵ mist_…⁶ #>   <chr>  <chr>     <chr>   <chr>   <int> <chr>     <int> <chr>     <int> <chr>   #> 1 <NA>   No Ortho… <NA>    <NA>       NA <NA>         NA <NA>         NA <NA>    #> 2 38456  Ubi-p63E  7316    high       11 Yes          15 Yes           2 -       #> 3 326237 Ubi-p5E   7316    modera…     5 No           15 Yes           1 -       #> 4 31564  CG11700   7316    low         2 No           15 No            0 -       #> 5 33629  RpL40     7316    low         1 No           15 No            0 -       #> 6 34420  RpS27A    7316    low         1 No           15 No            0 -       #> 7 35151  Nedd8     7316    low         1 No           15 No            0 -       #> # … with 7 more variables: mist_genetic <chr>, to_entrez_geneid <int>, #> #   species_id <int>, species_specific_geneid <chr>, #> #   species_specific_geneid_type <chr>, count <int>, methods <chr>, and #> #   abbreviated variable names ¹​confidence, ²​best_score, ³​max_score, #> #   ⁴​best_score_rev, ⁵​best_score_count, ⁶​mist_ppi"},{"path":[]},{"path":"/reference/check_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if all elements in the vecter is allowed. — check_arg","title":"Check if all elements in the vecter is allowed. — check_arg","text":"Check elements vecter allowed.","code":""},{"path":"/reference/check_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if all elements in the vecter is allowed. — check_arg","text":"","code":"check_arg(vec, allowed)"},{"path":"/reference/check_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if all elements in the vecter is allowed. — check_arg","text":"vector checking.","code":""},{"path":"/reference/find_orthologs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find orthologs between species — find_orthologs","title":"Find orthologs between species — find_orthologs","text":"Convert entrez gene ID one species another using DIOPT service. function wrapper DIOPT API.","code":""},{"path":"/reference/find_orthologs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find orthologs between species — find_orthologs","text":"","code":"find_orthologs(genes, from = 9606, to = 7227, filter = \"none\", version = 8)"},{"path":"/reference/find_orthologs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find orthologs between species — find_orthologs","text":"genes single entrez gene id Source species. See @details Target species. See @details filter Filter results. See @details. version version used. Currently v9 still beta.","code":""},{"path":"/reference/find_orthologs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find orthologs between species — find_orthologs","text":"tibble requested information.","code":""},{"path":"/reference/find_orthologs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find orthologs between species — find_orthologs","text":"arguments NCBI Taxonomy ID. DIOPT currently supports following IDs: \"\":  Species (Avaiable Target ) \"4896\": Schizosaccharomyces pombe (Fission yeast) \"4932\": Saccharomyces cerevisiae (Yeast) \"6239\": Caenorhabditis elegans (Worm) \"7227\": Drosophila melanogaster (Fly) \"7955\": Danio rerio (Zebrafish) \"8364\": Xenopus tropicalis (Western clawed frog) \"9606\": Homo sapiens (Human) \"10090\": Mus musculus (Mouse) \"10116\": Rattus norvegicus (Rat) \"3702\": Arabidopsis thaliana (Thale cress) /length input genes 1, warning recycle match length gene. filter argument filter based score. Options : none/best_match/exclude_score_less_1/exclude_score_less_2. See API Documentation","code":""},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/parse_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to parse the response. — parse_response","title":"Function to parse the response. — parse_response","text":"Function parse response.","code":""},{"path":"/reference/parse_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to parse the response. — parse_response","text":"","code":"parse_response(raw_res)"},{"path":"/reference/parse_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to parse the response. — parse_response","text":"raw_res content httr response","code":""},{"path":"/reference/parse_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to parse the results — parse_results","title":"Helper function to parse the results — parse_results","text":"Helper function parse results","code":""},{"path":"/reference/parse_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to parse the results — parse_results","text":"","code":"parse_results(raw_res)"},{"path":"/reference/parse_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to parse the results — parse_results","text":"raw_res content httr response","code":""},{"path":"/reference/parse_search_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to parse the query — parse_search_detail","title":"Helper function to parse the query — parse_search_detail","text":"Helper function parse query","code":""},{"path":"/reference/parse_search_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to parse the query — parse_search_detail","text":"","code":"parse_search_detail(raw_res)"},{"path":"/reference/parse_search_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to parse the query — parse_search_detail","text":"raw_res content httr response","code":""},{"path":"/reference/submit_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to submit a query to DIOPT — submit_ids","title":"Function to submit a query to DIOPT — submit_ids","text":"Function submit query DIOPT","code":""},{"path":"/reference/submit_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to submit a query to DIOPT — submit_ids","text":"","code":"submit_ids(id, from = 9606, to = 7227, filter = \"none\", version = 8)"},{"path":"/reference/submit_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to submit a query to DIOPT — submit_ids","text":"id single entrez gene id Source species. Target species. filter Filter results, see API API. version version used. Currently v9 still beta.","code":""}]
